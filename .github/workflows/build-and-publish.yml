name: Build and Publish

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build for Linux (x86_64)
      run: go build -v -o release/myapp-linux-x86_64

    - name: Upload Linux (x86_64) artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp-linux-x86_64
        path: release/myapp-linux-x86_64

    - name: Build for Linux (arm64)
      run: GOARCH=arm64 go build -v -o release/myapp-linux-arm64

    - name: Upload Linux (arm64) artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp-linux-arm64
        path: release/myapp-linux-arm64

    - name: Build for Linux (arm)
      run: GOARCH=arm go build -v -o release/myapp-linux-arm

    - name: Upload Linux (arm) artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp-linux-arm
        path: release/myapp-linux-arm

    - name: Build for macOS
      run: GOOS=darwin go build -v -o release/myapp-darwin-x86_64

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp-darwin-x86_64
        path: release/myapp-darwin-x86_64

    - name: Build for Windows
      run: GOOS=windows go build -v -o release/myapp-windows-x86_64.exe

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp-windows-x86_64
        path: release/myapp-windows-x86_64.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release 1.0.0
        body: This is the first release.
        draft: false
        prerelease: false

    - name: Attach artifacts to Release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
          release/myapp-linux-x86_64
          release/myapp-linux-arm64
          release/myapp-linux-arm
          release/myapp-darwin-x86_64
          release/myapp-windows-x86_64.exe
        asset_name: myapp
        asset_content_type: application/octet-stream
